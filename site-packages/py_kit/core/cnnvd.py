
import requests
import json
from cve_ease.sql import database
from cve_ease.conf import gconfig
from cve_ease.request import http
from cve_ease.models import CNNVD
import logging

logger = logging.getLogger('cve-ease')

class Cnnvd():

    def __init__(self):
        self.session = database.new_session()
        self.cnnvd_config = gconfig['cnnvd']

    def __del__(self):
        self.session.close()
    
    async def _scrapy_cnnvd(self, index):
        base_url = self.cnnvd_config['cnnvd_base_url']
        requese_data = {
                "pageIndex": index,
                "pageSize": 50,
                "keyword": "",
                "hazardLevel": "",
                "vulType": "",
                "vendor": "",
                "product": "",
                "dateType": ""
            }
        response = await http.post(base_url, json=requese_data)
        if response.success:
            _response_text = response.text
            json_data = json.loads(_response_text)
            if json_data['code'] == 200 and json_data['success']: 
                logger.info("scrapy cnnvd success")
                return json_data['data']
            else:
                logger.error("scrapy cnnvd failed params error: ", json_data['msg'])
        else:
            logger.error("scrapy cnnvd failed response error: ", response.error)

    async def cnnvd_makecache(self):

        # CNNVD.__table__.drop(database.get_engine())
        # CNNVD.__table__.create(database.get_engine())
        for index in range(0, 5000):
            json_data = await self._scrapy_cnnvd(index)
            if json_data:
                for vul_item in json_data['records']:
                    cnnvd_item = CNNVD()
                    cnnvd_item.cnnvd_id = vul_item['cnnvdCode']
                    cnnvd_item.cve_id = vul_item['cveCode']
                    cnnvd_item.hazard_level = vul_item['hazardLevel']
                    cnnvd_item.publish_time = vul_item['publishTime']
                    cnnvd_item.vul_name = vul_item['vulName']
                    print(f"[{index} / 5000 ] cnnvd_id: {cnnvd_item.cnnvd_id} cve_id: {cnnvd_item.cve_id} vul_name: {cnnvd_item.vul_name} publish_time: {cnnvd_item.publish_time} ")
                    if self.session.query(CNNVD).filter(CNNVD.cnnvd_id == cnnvd_item.cnnvd_id).first():
                        print("yes")
                        continue
                    self.session.add(cnnvd_item)
                self.session.commit()


    def cnnvd_listall(self):
        pass

    def cnnvd_stat(self):
        pass
    
