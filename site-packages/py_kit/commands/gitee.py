# -*- coding: utf-8 -*-

import logging
import asyncio
import time

from cve_ease.sql import database
from .base import BaseCommand
from cve_ease.core.gitee import Gitee

logger = logging.getLogger('cve-ease')


class GiteeCommand(BaseCommand):
    """gitee"""

    parser = None
    @staticmethod
    def register(subparsers):
        GiteeCommand.parser = subparsers.add_parser('gitee', help='Gitee issue info')
        GiteeCommand.parser.add_argument('-fi', '--fetchissue', dest='fetch_issue',
                        help='fetch all sname cve cache')
        GiteeCommand.parser.add_argument('-fp', '--fetchpr', dest='fetch_pr',
                        help='fetch one sname cve cache')
        GiteeCommand.parser.add_argument('-fd', '--fetchdate', dest='fetch_date', action='store_true', default=False,
                        help='fetch one sname cve cache')
        GiteeCommand.parser.add_argument('-li', '--listissue', dest='list_issue',
                        help='list all cve info')
        GiteeCommand.parser.add_argument('-lp', '--listpr', dest='list_pr',
                        help='list all cve info')
        GiteeCommand.parser.add_argument('-d', '--download', dest='download',
                        help='download for test')
        GiteeCommand.parser.add_argument('-t', '--test', dest='test', action='store_true', default=False,
                        help='just for test')
        GiteeCommand.parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', default=False,
                        help='show verbose output')
    def handle(self, options):
        """[info] Gitee Issue info"""
        gitee = Gitee()
        start_time = time.time()
        if options.fetch_issue:
            if options.fetch_issue == "all":
                gitee.fetch_all_issue()
            else:
                gitee.fetch_one_issue(options.fetch_issue)
        elif options.fetch_pr:
            if options.fetch_pr == "all":
                gitee.fetch_all_pr()
            else:
                gitee.fetch_one_pr(options.fetch_pr)
        elif options.list_issue:
            if options.list_issue == "all":
                gitee.list_all_issue()
            else:
                gitee.list_one_issue(options.list_issue)
        elif options.list_pr:
            if options.list_pr == "all":
                gitee.list_all_pr()
            else:
                gitee.list_one_pr(options.list_pr)
        elif options.fetch_date:
            gitee.fetch_release_date()
        elif options.test:
            # gitee.get_release_format_date("samba")
            gitee.test()
        elif options.download:
            pass
            # asyncio.run(gitee.download(options.download))
        else:
            GiteeCommand.parser.print_help()
        end_time = time.time()
        print("time cost:", end_time - start_time, "s")
